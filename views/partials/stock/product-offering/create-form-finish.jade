form(name="step.form", novalidate)
  .h5.text-dark-secondary
    strong #{ __("General") }
  .row
    .col-sm-8
      .form-group
        label #{ __("Name") }
        input.form-control(
          type="text"
          name="name"
          ng-model="createVM.data.name"
          required
          readonly
        )
    .col-sm-4
      .form-group
        label #{ __("Version") }
        input.form-control(
          type="text"
          name="version"
          ng-model="createVM.data.version"
          required
          readonly
        )
  .form-group
    label #{ __("Status") }
    .status-group
      .status-item(ng-repeat="status in FILTER_STATUS", class="status-{{ status.value | lowercase }}", ng-class="{ active: createVM.data.lifecycleStatus == status.value }")
        span.item-icon
        span.item-text {{ status.value }}
  .form-group
    label #{ __("Description") }
    textarea.form-control(
      rows="3"
      name="description"
      ng-model="createVM.data.description"
      readonly
    )
  .form-group(ng-if="createVM.places.length")
    label #{ __("Places") }
    .h4
      .label.label-default.inline-block(ng-repeat="name in createVM.places")
        span.item-text {{ name }}

  div(ng-if="!createVM.data.isBundle")
    .h5.text-dark-secondary
      strong #{ __("Product Spec.") }
    .form-group
      input(type="hidden", ng-model="createVM.product.id", required)
      .table-responsive
        table.table.table-bordered
          thead
            tr
              th #{ __("Status") }
              th #{ __("Name") }
              th #{ __("Type") }
              th #{ __("Last Updated") }
          tbody
            tr
              td
                .status-item(class="status-{{ createVM.product.lifecycleStatus | lowercase }}")
                  span.item-icon
                  span.item-text {{ createVM.product.lifecycleStatus }}
              th {{ createVM.product.name }}
              td
                span.label(ng-class="createVM.product.isBundle ? 'label-bundle' : 'label-single'")
                  | {{ createVM.product.isBundle ? '#{ __("Bundle") }' : '#{ __("Single") }' }}
              td
                time(am-time-ago="createVM.product.lastUpdate")

  .form-group(ng-show="createVM.data.isBundle")
    .h5.text-dark-secondary
      strong #{ __("Bundled Offerings") }
    .table-responsive
      table.table.table-bordered
        thead
          tr
            th #{ __("Status") }
            th #{ __("Name") }
            th #{ __("Type") }
            th #{ __("Last Updated") }
        tbody
          tr(ng-repeat="offering in createVM.data.bundledProductOffering")
            td
              .status-item(class="status-{{ offering.lifecycleStatus | lowercase }}")
                span.item-icon
                span.item-text {{ offering.lifecycleStatus }}
            th {{ offering.name }}
            td
              span.label(ng-class="offering.isBundle ? 'label-bundle' : 'label-single'")
                | {{ offering.isBundle ? '#{ __("Bundle") }' : '#{ __("Single") }' }}
            td
              time(am-time-ago="offering.lastUpdate")

  .h5.text-dark-secondary
    strong #{ __("Catalogue") }
  .form-group
    input(type="hidden", ng-model="createVM.catalogue.id", required)
    .table-responsive
      table.table.table-bordered
        thead
          tr
            th #{ __("Status") }
            th #{ __("Name") }
            th #{ __("Role") }
            th #{ __("Last Updated") }
        tbody
          tr
            td
              .status-item(class="status-{{ createVM.catalogue.lifecycleStatus | lowercase }}")
                span.item-icon
                span.item-text {{ createVM.catalogue.lifecycleStatus }}
            th {{ createVM.catalogue.name }}
            td {{ createVM.catalogue.getRoleOf(user.id) }}
            td
              time(am-time-ago="createVM.catalogue.lastUpdate")
  .form-group(ng-show="createVM.hasCategories()")
    .h5.text-dark-secondary
      strong #{ __("Categories") }
    .table-responsive
      table.table.table-bordered
        thead
          tr
            th #{ __("Name") }
            th #{ __("Last Updated") }
        tbody
          tr(ng-repeat="(key, category) in createVM.categories")
            td
              span(ng-repeat="parentCategory in category.getBreadcrumb()") {{ parentCategory.name }} / 
              strong {{ category.name }}
            td
              time(am-time-ago="category.lastUpdate")
  .row(ng-if="createVM.data.productOfferingPrice.length")
    .col-sm-12
      .h5.text-dark-secondary
        strong #{ __("Price plans") }
      .table-responsive
      table.table.table-bordered
        thead
          tr
            th #
            th #{ __("Name") }
            th #{ __("Description") }
            th #{ __("Price") }
        tbody
          tr(ng-repeat="priceplan in createVM.data.productOfferingPrice")
            th {{ $index + 1 }}
            th {{ priceplan.name }}
            th {{ priceplan.description }}
            td {{ priceplan.toString() }}

  //- .form-group
  //-   input(type="hidden", ng-model="createVM.data.serviceCandidate.id", required)
  //-   .h5.text-dark-secondary
  //-     strong  #{ __("Revenue Sharing Model") }
  //-   .table-responsive
  //-     table.table.table-bordered
  //-       thead
  //-         tr
  //-           th #{ __("Product Class") }
  //-           th #{ __("Platform Percentage") }
  //-           th #{ __("Provider Percentage") }
  //-           th NÂº #{ __("Stakeholders") }
  //-       tbody
  //-         tr
  //-           td
  //-             span {{ createVM.getSharingModel().productClass }}
  //-           td
  //-             span {{ createVM.getSharingModel().aggregatorValue }}
  //-           td
  //-             span {{ createVM.getSharingModel().ownerValue }}
  //-           td
  //-             span {{ createVM.getSharingModel().stakeholders.length }}
  .form-group.text-right
    a.btn.btn-warning(
      ng-click="createVM.create()"
      ng-disabled="!step.form.$valid || createVM.create.status === createVM.STATUS.PENDING"
    )
      span.item-icon.fa.fa-spin.fa-spinner(ng-if="createVM.create.status === createVM.STATUS.PENDING")
      span.item-text #{ __("Create") }