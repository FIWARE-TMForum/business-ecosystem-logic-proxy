form(name="updateVM.form", novalidate)
  .row
    .col-sm-12
      .form-group(
        ng-class="{ 'has-error': updateForm.hasError(updateVM.form.productClass) }"
      )
        label #{ __("Product class") }
        input.form-control(
          type="text"
          name="productClass"
          ng-model="updateVM.data.productClass"
          required
          ng-maxlength="200"
        )
        .help-block(
          ng-messages="updateVM.form.productClass.$error"
          ng-show="updateForm.hasError(updateVM.form.productClass)"
        )
          span(ng-message="required") #{ __("This field is required.") }
          span(ng-message="maxlength") #{ __("This field must not exceed %s chars.", "200") }

  .row
    .col-sm-6
      .form-group
        label #{ __("Platform percentage") }
          .input-group
            input.form-control(
              type="text"
              ng-model="updateVM.data.aggregatorShare"
              disabled
            )
            span.input-group-addon %
    .col-sm-6
      .form-group(
        ng-class="{ 'has-error' : updateForm.hasError(updateVM.form.providerShare) }"
      )
        label #{ __("Provider percentage") }
        .input-group
          input.form-control(
            type="number"
            name="providerShare"
            ng-model="updateVM.data.providerShare"
            min="0"
            max="100"
            required
          )
          span.input-group-addon %

        .help-block(
          ng-messages="updateVM.form.providerShare.$error"
          ng-show="updateForm.hasError(updateVM.form.providerShare)"
        )
          span(ng-message="required") #{ __("This field is required.") }
          span(ng-message="min") #{ __("This field must not be a negative number.") }
          span(ng-message="max") #{ __("This field must not be higher than 100.") }
          span(ng-message="number") #{ __("This field must be a valid number.") }

  table.table.table-bordered(ng-if="updateVM.data.stakeholders.length")
    thead
      tr
        th #{ __("User") }
        th #{ __("Percentage") }
        th #{ __("Delete") }
    tbody
      tr(ng-repeat="stakeholder in updateVM.data.stakeholders")
        td {{ stakeholder.stakeholderId }}
        td {{ stakeholder.stakeholderShare }} %
        td
          a.btn.btn-sm.btn-icon.btn-danger(ng-click="updateVM.removeStakeholder($index)")
            span.fa.fa-trash
  .alert.alert-info.text-center(ng-if="!updateVM.data.stakeholders.length")
    | #{ __("No stakeholders included.") }

.col-xs-12(ng-switch="updateVM.providers.status")
  div(ng-switch-when="LOADED")
    .form-group.text-left
      a.btn.btn-default.z-depth-1(ng-click="updateVM.stakeholderEnabled = true", ng-if="!updateVM.stakeholderEnabled && updateVM.providers.length")
        span.item-icon.fa.fa-plus
        span.item-text #{ __("Add stakeholder") }

    form(name="updateVM.stakeholdersForm", novalidate, ng-if="updateVM.stakeholderEnabled")
      .row
        .col-md-8
          .form-group
            label #{ __("Select stakeholder") }
            select.form-control(
              ng-options="provider as provider.providerName for provider in updateVM.providers"
              ng-model="updateVM.currentStakeholder"
            )
        .col-sm-4
          .form-group(
            ng-class="{ 'has-error' : updateForm.hasError(updateVM.stakeholdersForm.stValue) }"
          )
            label #{ __("Stakeholder percentage") }
            .input-group
              input.form-control(
                type="number"
                name="stValue"
                ng-model="updateVM.currentStValue"
                min="0"
                max="100"
                required
              )
              span.input-group-addon %

            .help-block(
              ng-messages="updateVM.stakeholdersForm.stValue.$error"
              ng-show="updateForm.hasError(updateVM.stakeholdersForm.stValue)"
            )
              span(ng-message="required") #{ __("This field is required.") }
              span(ng-message="min") #{ __("This field must not be a negative number.") }
              span(ng-message="max") #{ __("This field must not be higher than 100.") }
              span(ng-message="number") #{ __("This field must be a valid number.") }

      .row
        .col-sm-6
          a.btn.btn-success.z-depth-1(ng-disabled="!updateVM.stakeholdersForm.$valid", ng-click="updateVM.addStakeholder() && updateForm.resetForm(updateVM.stakeholdersForm)", ng-if="updateVM.stakeholderEnabled")
            span.item-text #{ __("Add stakeholder") }
          a.btn.btn-danger.z-depth-1(style="margin-left: 10px;" ng-click="updateVM.cancelStakeholder() && updateForm.resetForm(updateVM.stakeholdersForm)", ng-if="updateVM.stakeholderEnabled")
            span.item-text #{ __("Cancel") }

  div(ng-switch-when="ERROR")
    .alert.alert-danger.text-center {{ updateVM.providers.error }}
  div(ng-switch-default)
    .container-spinner
      span.fa.fa-spinner.fa-spin.fa-2x
.row
  .col-sm-12
    h5(ng-class="{'text-danger': updateVM.getSavedPercentage() != 100}")
      strong Total: {{ updateVM.getSavedPercentage() }} %

.form-group.text-right
  a.btn.btn-success.z-depth-1(ng-click="updateVM.update()", ng-disabled="!updateVM.form.$valid || updateVM.getSavedPercentage() != 100")
    span.item-text #{ __("Update") }

